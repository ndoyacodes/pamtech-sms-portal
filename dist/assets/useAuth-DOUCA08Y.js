import{o as h,k as w,l as y,y as r,s as P}from"./index-d9TgJTTy.js";import{u as i}from"./useMutation-scFYzLXQ.js";import{A as F}from"./instance-BGpPafi2.js";class S extends F{constructor(){super("baseService")}login(e){return this.post("/auth/login",e)}regieter(e){return this.post("/auth/register",e,{headers:{"Content-Type":"multipart/form-data"}})}currentUserProfile(){return this.get("/user/profile/")}updateCurrentUserProfile(e){return this.put("/user/profile/",e)}logout(){return this.post("/auth/logout")}forgetReset(e){return this.post("/auth/password-reset/",e)}resetPassword(e,c,a){const l=new URLSearchParams({"reset-token":e,email:c});return this.post(`/auth/password-reset?${l.toString()}`,a)}forgetPassword(e){return this.post("/auth/forgot-password",e)}}const t=new S,U=()=>{const p=h(),e=w(),c=y(),a=i({mutationFn:t.login.bind(t),onSuccess:s=>{if(r.success("User logged in successfully"),(s==null?void 0:s.message)=="Successfully logged in")p(P({accessToken:s==null?void 0:s.accessToken,refreshToken:s==null?void 0:s.refreshToken,user:s==null?void 0:s.user})),e("/");else return!0},onError:s=>{var o,u;console.log("error",s);const n=((u=(o=s==null?void 0:s.response)==null?void 0:o.data)==null?void 0:u.message)||"Failed to login user";n.includes("Invalid credentials")?r.error("Invalid username or password"):r.error(n)}}),l=i({mutationFn:t.regieter.bind(t),onSuccess:s=>{r.success("Registration successful please login"),e("/sign-in")},onError:s=>{var o,u;console.log("error",s);const n=((u=(o=s==null?void 0:s.response)==null?void 0:o.data)==null?void 0:u.message)||"Failed to register user";n.includes("Failed to register user")?r.error("Failed to register user"):r.error(n)}}),g=i({mutationFn:t.forgetPassword.bind(t),onSuccess:()=>{r.success("password reset was sent successfully, a link is sent to your email to reset your password")},onError:()=>{r.error("Failed to reset passwors, email accout not found")}}),d=i({mutationFn:t.forgetReset.bind(t),onSuccess:()=>{r.success("password reset sent successfully")},onError:()=>{r.error("Failed to reset passwors")}}),f=i({mutationFn:({token:s,email:n,data:o})=>t.resetPassword(s,n,o),onSuccess:()=>{e("/sign-in"),r.success("Password updated successfully")},onError:s=>{var o,u;const n=((u=(o=s==null?void 0:s.response)==null?void 0:o.data)==null?void 0:u.message)||"Password reset failed";r.error(n)}}),m=i({mutationFn:({data:s})=>t.updateCurrentUserProfile.bind(t)(s),onSuccess:()=>{c.invalidateQueries({queryKey:["profile"]}),r.success("Profile was updated successfully")},onError:()=>{r.error("Failed to update profile, please try again later")}});return{loginUser:a,registerCustomer:l,updateCurrentUserProfile:m,forgetPassword:g,resetPassword:d,reset:f}};export{U as u};
